# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   Given an action, ie. ACCEPT/REJECT or a chain name, returns the partial iptables
#rule to facilitate taking the appropriate action.
#
#Examples:
#
#  # returns "-j ACCEPT'
#  format_action('ACCEPT')
#  format_action(nil)
#
#  # returns '-j LOG'
#  format_action('LOG')
#
#  # Parse Error
#  format_action('')
#  format_action('SOME CHAIN')
#
#
Puppet::Functions.create_function(:'iptables::format_action') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    action = 'ACCEPT'
    action = args[0] unless args[0] == nil or args[0] == 'UNSET'

    if action == :undef or action == ''
      raise Puppet::ParseError, \
        "action not specified"
    end

    # do some basic validation of the action
    if action =~ /\s/
      raise Puppet::ParseError, \
        "action cannot contain whitespace - \"#{action}\""
    end

    return "-j #{action}"
  
  end
end
