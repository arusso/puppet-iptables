# This is an autogenerated function, ported from the original legacy version.
# It /should work/ as is, but will not have all the benefits of the modern
# function API. You should see the function docs to learn how to add function
# signatures for type safety and to document this function using puppet-strings.
#
# https://puppet.com/docs/puppet/latest/custom_functions_ruby.html
#
# ---- original file header ----

# ---- original file header ----
#
# @summary
#   
#
Puppet::Functions.create_function(:'iptables::iptables_format_limit') do
  # @param args
  #   The original array of arguments. Port this to individually managed params
  #   to get the full benefit of the modern function API.
  #
  # @return [Data type]
  #   Describe what the function returns here
  #
  dispatch :default_impl do
    # Call the method named 'default_impl' when this is matched
    # Port this to match individual params for better type safety
    repeated_param 'Any', :args
  end


  def default_impl(*args)
    
    limit = burst = ''

    limit = args[0].dup if args[0].is_a?(String)
    burst = args[1].dup if args[1].is_a?(String)

    return '' if limit == ''

    info = limit.split('/')
    value = info[0]

    valid_units = [ 'second', 'minute', 'hour', 'day' ]

    unit = info[1]
    unit = valid_units.select { |v| v =~ /^#{unit}/ }[0] unless unit.nil?
    unit ||= 'second'

    burst = "--limit-burst #{burst}" unless burst == ''

    return "-m limit --limit #{value}/#{unit} #{burst}".strip
  
  end
end
